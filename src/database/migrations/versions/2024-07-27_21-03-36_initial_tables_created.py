"""Initial tables created

Revision ID: b56eb970f789
Revises: 
Create Date: 2024-07-27 21:03:36.894239

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b56eb970f789'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('normalized_email', sa.String(length=255), nullable=False),
    sa.Column('time_zone', sa.Float(), nullable=False),
    sa.Column('locale', sa.String(length=10), server_default='en-US', nullable=False),
    sa.Column('is_tutor', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_student', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('normalized_email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('tutor_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tutor_id', sa.BigInteger(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['tutor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tutor_id', 'subject_id', name='unique_tutor_subject')
    )
    op.create_index(op.f('ix_tutor_courses_id'), 'tutor_courses', ['id'], unique=False)
    op.create_table('users_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('request_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tutor_role', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('student_role', sa.Boolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_requests_id'), 'users_requests', ['id'], unique=False)
    op.create_table('private_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.BigInteger(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['tutor_courses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'course_id', name='unique_student_course')
    )
    op.create_index(op.f('ix_private_courses_id'), 'private_courses', ['id'], unique=False)
    op.create_table('private_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('private_course_id', sa.Integer(), nullable=False),
    sa.Column('schedule_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assignment', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_scheduled', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('has_occurred', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_paid', sa.Boolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['private_course_id'], ['private_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_private_classes_id'), 'private_classes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_private_classes_id'), table_name='private_classes')
    op.drop_table('private_classes')
    op.drop_index(op.f('ix_private_courses_id'), table_name='private_courses')
    op.drop_table('private_courses')
    op.drop_index(op.f('ix_users_requests_id'), table_name='users_requests')
    op.drop_table('users_requests')
    op.drop_index(op.f('ix_tutor_courses_id'), table_name='tutor_courses')
    op.drop_table('tutor_courses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    # ### end Alembic commands ###
